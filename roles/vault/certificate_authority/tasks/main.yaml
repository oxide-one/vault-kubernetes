# We don't want to be re-mounting
- name: "Fetch currently configured mounts from vault"
  uri:
    url: "{{ vault_url }}/v1/sys/mounts"
    headers:
      X-Vault-Request: true
      X-Vault-Token: "{{ vault_token }}"
    method: GET
    status_code:
      - 200
  register: vault_mounts

- name: "Set a fact to display the mounts"
  ansible.builtin.set_fact:
    vault_ca_present: "{{ (vault_ca_path + '/') in  vault_mounts.json }}"

- name: "Create a certificate authority at /{{ vault_ca_path }}"
  uri:
    url: "{{ vault_url }}/v1/sys/mounts/{{ vault_ca_path }}"
    headers:
      X-Vault-Request: true
      X-Vault-Token: "{{ vault_token }}"
    method: POST
    body: "{{ vault_ca_mount_options | to_json }}"
    body_format: json
    status_code:
      - 204
  when:
  - not vault_ca_present


- name: "Generate a root certificate"
  uri:
    url: "{{ vault_url }}/v1/{{ vault_ca_path }}/root/generate/internal"
    headers:
      X-Vault-Request: true
      X-Vault-Token: "{{ vault_token }}"
    method: POST
    body: "{{ vault_root_certificate_options | to_json }}"
    body_format: json
    status_code:
      - 200
  register: vault_root_cacert_data

- name: "Configure the issuing urls and revokation URLs"
  uri:
    url: "{{ vault_url }}/v1/{{ vault_ca_path }}/config/urls"
    headers:
      X-Vault-Request: true
      X-Vault-Token: "{{ vault_token }}"
    method: POST
    body: "{{ vault_crl_config | to_json }}"
    body_format: json
    status_code:
      - 204
      - 200
  register: vault_ca_urlset