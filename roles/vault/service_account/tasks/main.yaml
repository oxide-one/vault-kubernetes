# We don't want to be re-mounting
- name: "Fetch currently configured mounts from vault"
  uri:
    url: "{{ vault_url }}/v1/sys/mounts"
    headers:
      X-Vault-Request: true
      X-Vault-Token: "{{ vault_token }}"
    method: GET
    status_code:
      - 200
  register: vault_mounts

- name: "Set a fact to display the mounts"
  ansible.builtin.set_fact:
    vault_engine_present: "{{ (vault_engine_path + '/') in  vault_mounts.json }}"

- name: "Create a secret engine at /{{ vault_engine_path }}"
  uri:
    url: "{{ vault_url }}/v1/sys/mounts/{{ vault_engine_path }}"
    headers:
      X-Vault-Request: true
      X-Vault-Token: "{{ vault_token }}"
    method: POST
    body: "{{ vault_engine_mount_options | to_json }}"
    body_format: json
    status_code:
      - 204
  when:
  - not vault_engine_present # Don't recreate the engine

- name: "Pull the Service account keys"
  uri:
    url: "{{ vault_url }}/v1/{{ vault_engine_path }}/metadata?list=true"
    headers:
      X-Vault-Request: true
      X-Vault-Token: "{{ vault_token }}"
    method: GET
    status_code:
      - 200
      - 404
  register: key_list

- name: Set a fact to ensure that the next few roles don't fail
  ansible.builtin.set_fact:
    key_list:
      json:
        data:
          keys: []
  when: key_list.status == 404

- name: Generate an Public/Private keypair for use in ServiceAccounts
  community.crypto.openssl_privatekey_pipe:
  register: pkey_pipe_output
  no_log: true 
  when:
  - "'pubkey' not in key_list.json.data['keys']"
  - "'privkey' not in key_list.json.data['keys']"

- name: "Set a fact to set the Service Account Public and Private key"
  ansible.builtin.set_fact:
    serviceaccount_pubkey: 
      data:
        key: "{{ pkey_pipe_output.diff.after.public_key }}"
    serviceaccount_privkey:
      data:
        key:  "{{ pkey_pipe_output.privatekey }}"
  when:
  - "'pubkey' not in key_list.json.data['keys']"
  - "'privkey' not in key_list.json.data['keys']"

- name: "Push the pubkey up"
  uri:
    url: "{{ vault_url }}/v1/{{ vault_engine_path }}/data/pubkey"
    headers:
      X-Vault-Request: true
      X-Vault-Token: "{{ vault_token }}"
    method: POST
    body: "{{ serviceaccount_pubkey | to_json }}"
    body_format: json
    status_code:
      - 200
  register: vault_root_cacert_data
  when:
  - "'pubkey' not in key_list.json.data['keys']"

- name: "Push the private key up"
  uri:
    url: "{{ vault_url }}/v1/{{ vault_engine_path }}/data/privkey"
    headers:
      X-Vault-Request: true
      X-Vault-Token: "{{ vault_token }}"
    method: POST
    body: "{{ serviceaccount_privkey | to_json }}"
    body_format: json
    status_code:
      - 200
  register: vault_root_cacert_data
  when:
  - "'privkey' not in key_list.json.data['keys']"